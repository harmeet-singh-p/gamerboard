<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GameProj">

    <!--<Style x:Key="abc">
        <Setter Property="TextBlock.FontFamily" Value="pack://application:,,,/Fonts/#hk-grotesk.regular-legacy.ttf"></Setter>
    </Style>-->

    <!--Color-->

    <Style x:Key="abc">
        <Setter Property="TextElement.FontFamily" Value="Resources/#hk-grotesk.regular-legacy" />
    </Style>
    
    <FontFamily x:Key="NotoSans">pack://application:,,,/Fonts/#hk-grotesk.regular-legacy</FontFamily>


    
    <SolidColorBrush x:Key="color_sidemenuicon" Color="#141416" />
    <SolidColorBrush x:Key="color_sidemenuicon_clicked" Color="#1b234b" />
    <SolidColorBrush x:Key="color_sidemenuicon_bg_gray" Color="#26272b" />
    <SolidColorBrush x:Key="color_bg_category_filter" Color="#444446" />

    <SolidColorBrush x:Key="color_bg_sidemenu" Color="#141416" />
    <SolidColorBrush x:Key="color_bg_mainmenu" Color="#151518" />

    <SolidColorBrush x:Key="color_bg_maingrid" Color="#151518" />
    <SolidColorBrush x:Key="color_bg_smallgrid" Color="#1C1D20" />
    <SolidColorBrush x:Key="color_seemore" Color="#797A7C" />


    <SolidColorBrush x:Key="color_bg_sv_content" Color="#151518" />

    <SolidColorBrush x:Key="color_categoryname" Color="#8F8983" />
    <SolidColorBrush x:Key="color_gamename" Color="#999" />
    <SolidColorBrush x:Key="color_username" Color="#F1F1F2" />
    <SolidColorBrush x:Key="color_statsheader" Color="#52555B" />
    <SolidColorBrush x:Key="color_showmore" Color="#8F8983" />

    <SolidColorBrush x:Key="color_search_border_bg" Color="#5F5C5B" />
    <SolidColorBrush x:Key="color_btn_logout_bg_border" Color="Red" />


    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Border Brushes -->

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="Black"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                        <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="White"
            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
          CornerRadius="2" 
          Background="{DynamicResource color_bg_mainmenu}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="#F0F0F0" />
            <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track 
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="8"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="8"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="#F0F0F0" />
            <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="10"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Flat ComboBox -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
            BorderBrush="{StaticResource color_bg_mainmenu}"
            CornerRadius="3" BorderThickness="1, 1, 1, 1"
            Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{StaticResource color_gamename}" Name="ButtonBorder" 
            CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
            Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1"
          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
          HorizontalAlignment="Center" Fill="{StaticResource color_gamename}"
          VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="#999"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
              ClickMode="Press" Focusable="False"
              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
              Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                   IsReadOnly="{TemplateBinding IsReadOnly}"
                   Visibility="Hidden" Background="Transparent"
                   HorizontalAlignment="Left" VerticalAlignment="Center"
                   Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                 Focusable="False" AllowsTransparency="True"
                 IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                 PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{StaticResource color_bg_mainmenu}" Margin="0, 1, 0, 0"
                      CornerRadius="0" BorderThickness="0"
                      BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End Color-->

    <!-- Window -->

    <!-- Main -->

    <Style x:Key="style_mainwindow_window_gamelist" TargetType="Window">
        <Setter Property="Title" Value="Dashboard"></Setter>
        <Setter Property="Width" Value="800"></Setter>
        <Setter Property="Height" Value="450"></Setter>
        <Setter Property="WindowState" Value="Maximized"></Setter>
        <Setter Property="FontFamily" Value="'Montserrat', sans-serif"></Setter>
    </Style>

    <!-- End Main -->

    <!-- End Window -->

    <!-- Button-->
    <Style x:Key="style_mainwindow_button_Left_banner_navigate" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0,12, 12,0" Background="#727A7A7A" x:Name="ButtonBorder" BorderThickness="1" BorderBrush="Transparent">
                        <TextBlock Text="&lt;" HorizontalAlignment="Center" Foreground="#FFFFFF" FontSize="30" VerticalAlignment="Center" ></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="style_button_OpenChatWindow" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Margin="0 0 10 0"  Width="15" Height="15" Source="images\msg-icon.png" ></Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_Right_banner_navigate" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12, 0, 0, 12" Background="#727A7A7A" x:Name="ButtonBorder" BorderThickness="1" BorderBrush="Transparent">
                        <TextBlock Text="&gt;" HorizontalAlignment="Center" Foreground="#FFFFFF" FontSize="30" VerticalAlignment="Center"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_index_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-one.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_index_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/home.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_second_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-two.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_second_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/gamesLink.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_third_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-three.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_third_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/documents.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_fourth_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-four.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_fourth_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/leaderboard.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_fifth_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_bg_gray}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_bg_gray}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-fill-one.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_fifth_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/messages.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_sixth_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_bg_gray}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_bg_gray}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-fill-two.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_sixth_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/settings.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_seventh_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/aside-link-five.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_seventh_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/tournaments.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_eighth_sidemenu" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/food-black.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_button_eighth_sidemenu_clicked" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="12" Background="{DynamicResource color_sidemenuicon_clicked}" Margin="10,10" x:Name="border_sidemenu">
                        <Border x:Name="border_sidemenu_inner" CornerRadius="12" Width="50" Height="50" BorderThickness="1" BorderBrush="{DynamicResource color_sidemenuicon_clicked}" HorizontalAlignment="Center">
                            <Border.Background>
                                <ImageBrush Stretch="None" ImageSource="images/food.png" />
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_category_filter" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="category_filter_btn_border" Style="{StaticResource style_mainwindow_border_category_filter}">
                        <TextBlock x:Name="category_filter_btn_textblock" Style="{StaticResource style_mainwindow_textbox_category_filter}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="style_mainwindow_seemore" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <TextBlock Foreground="{StaticResource color_seemore}" Margin="5 2 0 0"
                                   Text="See More " TextDecorations="Underline" x:Name="category_filter_btn_textblock" ></TextBlock>
                        <TextBlock FontSize="16" Foreground="#FE005D" Margin="0 0 0 0" Text="&#x2794;"></TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="Background" Value="{StaticResource color_bg_smallgrid}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Margin" Value="0 0 10 0" ></Setter>
    </Style>


    <Style x:Key="style_mainwindow_viewmore" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <TextBlock Foreground="{StaticResource color_seemore}" Margin="5 2 0 0"
                                   Text="View More" TextDecorations="Underline" x:Name="category_filter_btn_textblock" ></TextBlock>
                        <TextBlock FontSize="16" Foreground="#FE005D" Margin="0 0 0 0" Text="&#x2794;"></TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="Background" Value="{StaticResource color_bg_smallgrid}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Margin" Value="0 0 10 0" ></Setter>
    </Style>

    <Style x:Key="style_mainwindow_seemorechallenges" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Foreground="White" Text="See More Challenges" FontSize="15">
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource color_bg_smallgrid}"></Setter>
    </Style>

    <!-- End Button-->


    <Style x:Key="style_mainwindow_border_category_filter" TargetType="{x:Type Border}">
        <Setter Property="Tag" Value=""></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Background" Value="{DynamicResource color_bg_category_filter}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource color_bg_category_filter}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
    </Style>

    <Style x:Key="style_mainwindow_textbox_category_filter" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="bold"></Setter>
    </Style>


    <!-- Grid-->

    <Style x:Key="style_mainwindow_grid_grid_main" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource color_bg_mainmenu}"></Setter>
    </Style>

    <Style x:Key="style_mainwindow_grid_sidemenu" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource color_bg_smallgrid}"></Setter>
    </Style>

    <!-- End Grid-->

    <!-- Stack panel-->

    <Style x:Key="style_mainwindow_sp_sidemenu_top" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Margin" Value="10,-250,10,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="style_mainwindow_sp_sidemenu_bottom" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Margin" Value="10,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
    </Style>

    <!-- End Stack panel-->

    <!-- Scroll Viewer-->

    <Style x:Key="style_mainwindow_sv_content" TargetType="ScrollViewer">
        <Setter Property="Background" Value="Black"></Setter>
        <!--<Setter Property="Padding" Value="0,15,0,0"></Setter>-->
    </Style>

    <!-- End Scroll Viewer-->

    <!-- Game Listing-->

    <Style x:Key="style_mainwindow_textblock_categoryname" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource color_categoryname}"></Setter>
    </Style>

    <Style x:Key="style_mainwindow_textblock_showmore" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource color_showmore}"></Setter>
    </Style>

    <Style x:Key="style_mainwindow_textblock_gamename" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource color_gamename}"></Setter>
    </Style>

    <LinearGradientBrush x:Key="Brush_DataGridHeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF1C7CB1" Offset="0" />
        <GradientStop Color="#FF004A83" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_DataGridHeaderMouseOverBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF1C7CAF" Offset="0" />
        <GradientStop Color="#FF042A68" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_DataGridHeaderBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF1B577E" Offset="0" />
        <GradientStop Color="#FF083258" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_DataGridHeaderSortedBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#B58801" Offset="0" />
        <GradientStop Color="#681900" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_DataGridHeaderSortedBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#C46007" Offset="0" />
        <GradientStop Color="#AF2600" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_DataGridSelected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3E4854" Offset="1"/>
        <GradientStop Color="#FF5D6670"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Brush_DataGridSelectedForeground" Color="#FFFFFF" />

    <LinearGradientBrush x:Key="Brush_DataGridAltRowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE1FFEE" Offset="0"/>
        <GradientStop Color="#FFC3F9DA" Offset="0.992"/>
    </LinearGradientBrush>

    <Style x:Key="Style_HeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0" Background="{StaticResource color_bg_mainmenu}" BorderBrush="{StaticResource Brush_DataGridHeaderSortedBorder}" Grid.ColumnSpan="2" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        <Rectangle Width="0" Fill="#AAC377" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                        <Rectangle Width="0" Margin="0" Fill="#425B10" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Style_HeaderGripper}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Style_HeaderGripper}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush"  Value="Transparent" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource Brush_DataGridHeaderMouseOverBackground}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource Brush_DataGridHeaderBorder}" />
                        </Trigger>-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="DataGridCellKey" TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="BackgroundBorder" Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" Margin="4,0,6,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>

    <Style x:Key="DataGridCellBoldKey" TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="BackgroundBorder" Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" Margin="4,0,6,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <Style x:Key="DataGridCellBigFontKey" TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="BackgroundBorder" Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" Margin="4,0,6,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>

    <!-- DataGridRow -->

    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0,3"></Setter>
        <Setter Property="Background"  >

            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#262F3C " Offset="0"></GradientStop>
                        <GradientStop Color="#1C212A" Offset="0.4"></GradientStop>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border 
          x:Name="DGR_Border"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid x:Name="selectiveScrollingGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <DataGridCellsPresenter x:Name="dataGridCellsPresenter" 
              Grid.Column="1"
               ItemsPanel="{TemplateBinding ItemsPanel}"
               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridRowHeader x:Name="dataGridRowHeader" 
              SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  
              Grid.RowSpan="2"
              Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                            <Grid Grid.Column="1" Grid.Row="1" Name="Details" Visibility="Collapsed" Background="Gray">
                                <DataGridDetailsPresenter x:Name="dataGridDetailsPresenter" />
                            </Grid>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource BlueWindow}"/>
                            <Setter Property="Foreground" TargetName="dataGridCellsPresenter" Value="White"/>
                            <Setter Property="Foreground" TargetName="dataGridRowHeader" Value="White"/>
                            <Setter Property="FontSize" TargetName="dataGridRowHeader" Value="13.333"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="TextElement.Foreground" Value="{StaticResource Brush_DataGridSelectedForeground}" />
                            <Setter Property="Visibility" TargetName="dataGridDetailsPresenter" Value="Hidden"/>
                            <Setter Property="FontSize" TargetName="dataGridCellsPresenter" Value="14.667"/>
                            <Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource Brush_DataGridSelected}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid -->

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource Brush_DataGridAltRowBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" Background="{StaticResource color_bg_mainmenu}" BorderBrush="{StaticResource Brush_DataGridHeaderBorder}" BorderThickness="0" />
                                        <Button 
                    Command="{x:Static DataGrid.SelectAllCommand}" 
                    Width="0"
                    Focusable="false"
                    OverridesDefaultStyle="True"
                   >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid Width="0">
                                                        <Border  Background="{StaticResource Brush_DataGridHeaderBackground}" BorderBrush="{StaticResource Brush_DataGridHeaderBorder}" BorderThickness="0">
                                                            <Path x:Name="Arrow" VerticalAlignment="Bottom" Margin="4" Fill="#3000" Width="11" Height="11" Stretch="Fill" Data="M1,0 L1,1 0,1 z"/>
                                                        </Border>
                                                        <Rectangle Width="0" Fill="#AAC377" HorizontalAlignment="Right" />
                                                        <Rectangle Width="0" Margin="0,0,0,0" Fill="#425B10" HorizontalAlignment="Right" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <DataGridColumnHeadersPresenter 
                    Grid.Column="1"                         
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>
                                        <!-- JAIMER removed from above
                    SourceScrollViewerName="DG_ScrollViewer" -->
                                        <ScrollContentPresenter Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar 
                    Name="PART_VerticalScrollBar"
                    Grid.Row="1" 
                    Grid.Column="2" 
                     Orientation="Vertical"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar 
                      Grid.Column="1"
                      Name="PART_HorizontalScrollBar"
                      Orientation="Horizontal"
                                               
                      Maximum="{TemplateBinding ScrollableWidth}"
                      ViewportSize="{TemplateBinding ViewportWidth}"
                      Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- End Category Listing-->
</ResourceDictionary>